// Generated by view binder compiler. Do not edit!
package com.example.dialastocktaker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dialastocktaker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemJobBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnViewDetails;

  @NonNull
  public final Button btnViewReport;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvJobId;

  @NonNull
  public final TextView tvLocation;

  @NonNull
  public final TextView tvStatus;

  @NonNull
  public final TextView tvTeam;

  private ItemJobBinding(@NonNull CardView rootView, @NonNull Button btnViewDetails,
      @NonNull Button btnViewReport, @NonNull TextView tvDate, @NonNull TextView tvJobId,
      @NonNull TextView tvLocation, @NonNull TextView tvStatus, @NonNull TextView tvTeam) {
    this.rootView = rootView;
    this.btnViewDetails = btnViewDetails;
    this.btnViewReport = btnViewReport;
    this.tvDate = tvDate;
    this.tvJobId = tvJobId;
    this.tvLocation = tvLocation;
    this.tvStatus = tvStatus;
    this.tvTeam = tvTeam;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemJobBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemJobBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_job, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemJobBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnViewDetails;
      Button btnViewDetails = ViewBindings.findChildViewById(rootView, id);
      if (btnViewDetails == null) {
        break missingId;
      }

      id = R.id.btnViewReport;
      Button btnViewReport = ViewBindings.findChildViewById(rootView, id);
      if (btnViewReport == null) {
        break missingId;
      }

      id = R.id.tvDate;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvJobId;
      TextView tvJobId = ViewBindings.findChildViewById(rootView, id);
      if (tvJobId == null) {
        break missingId;
      }

      id = R.id.tvLocation;
      TextView tvLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvLocation == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      id = R.id.tvTeam;
      TextView tvTeam = ViewBindings.findChildViewById(rootView, id);
      if (tvTeam == null) {
        break missingId;
      }

      return new ItemJobBinding((CardView) rootView, btnViewDetails, btnViewReport, tvDate, tvJobId,
          tvLocation, tvStatus, tvTeam);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
